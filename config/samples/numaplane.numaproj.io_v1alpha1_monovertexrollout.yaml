apiVersion: numaplane.numaproj.io/v1alpha1
kind: MonoVertexRollout
metadata:
  name: my-monovertex
  namespace: example-namespace
spec:
  strategy:
    progressive:
      assessmentSchedule: "10,240,60,10"
    analysis:
      args:
      templates:
      - templateName: mvtx-acknowledged-messages
        clusterScope: false
    pauseResume:
      fastResume: true
  riders:
    - definition:
        apiVersion: autoscaling.k8s.io/v1beta2
        kind: VerticalPodAutoscaler
        metadata: 
          name: vpa
        spec:
          targetRef: 
            apiVersion: numaproj.io/v1alpha1
            kind: MonoVertex
            name: '{{.monovertex-name}}'
          # todo: add more fields here...

  monoVertex:
    #uncomment for Progressive rollout to set Numaflow Controller instance:
    #metadata:
    #  annotations:
    #    numaflow.numaproj.io/instance: "0"
    spec:
      scale:
        min: 2
        max: 3
        lookbackSeconds: 60
      source:
        udsource:
          container:
            image: quay.io/numaio/numaflow-go/source-simple-source:stable
        transformer:
          container:
            image: quay.io/numaio/numaflow-rs/source-transformer-now:stable
      sink:
        udsink:
          container:
            image: quay.io/numaio/numaflow-go/sink-log:stable
            #image: quay.io/numaio/numaflow-go/sink-log-failure:stable # use to fail the AnalysisRun
---

apiVersion: argoproj.io/v1alpha1
kind: AnalysisTemplate
metadata:
  name: mvtx-acknowledged-messages
  namespace: example-namespace
  labels:
    used_by: numaplane
spec:
  args:
    - name: upgrading-monovertex-name
    - name: monovertex-namespace
    - name: interval
      value: 10s
    - name: success-limit
      value: "3" # if we do this check too early and the prometheus metric doesn't know about the read count yet, it could
                        # succeed when it shouldn't
    - name: failure-limit 
      value: "3" # if we do this check too early and the read has occurred but not the ack, it could fail when it shouldn't
  metrics:
  - name: acknowledged-messages
    consecutiveSuccessLimit: '{{args.success-limit}}'
    failureLimit: '{{args.failure-limit}}'
    interval: '{{args.interval}}'
    provider:
      prometheus:
        address: http://prometheus-kube-prometheus-prometheus.prometheus.svc.cluster.local:9090
        query: |
          (
            absent(sum(numaflow_monovtx_read_total{namespace="{{args.monovertex-namespace}}", mvtx_name="{{args.upgrading-monovertex-name}}"}))
            OR
            sum(numaflow_monovtx_read_total{namespace="{{args.monovertex-namespace}}", mvtx_name="{{args.upgrading-monovertex-name}}"}) == 0
          )
          OR
          (
            sum(numaflow_monovtx_ack_total{namespace="{{args.monovertex-namespace}}", mvtx_name="{{args.upgrading-monovertex-name}}"}) > 0
          )
    successCondition: len(result) > 0 && result[0] > 0