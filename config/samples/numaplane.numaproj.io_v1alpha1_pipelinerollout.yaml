apiVersion: numaplane.numaproj.io/v1alpha1
kind: PipelineRollout
metadata:
  name: my-pipeline
  namespace: example-namespace
spec:
  strategy:
    progressive:
      assessmentSchedule: "120,360,60,10"
    analysis:
      args:
      #templates:
      #- templateName: pipeline-template
      #  clusterScope: false
  riders:
    - perVertex: true
      definition:
        apiVersion: autoscaling.k8s.io/v1beta2
        kind: VerticalPodAutoscaler
        metadata: 
          name: vpa
        spec:
          targetRef: 
            apiVersion: numaproj.io/v1alpha1
            kind: Vertex
            name: '{{.pipeline-name}}-{{.vertex-name}}'
    - perVertex: true
      definition:
        apiVersion: autoscaling/v2
        kind: HorizontalPodAutoscaler
        metadata: 
          name: hpa
        spec:
          minReplicas: 1
          maxReplicas: 10
          metrics:
          - object:
              metric:
                name: namespace_app_monovertex_container_cpu_utilization
                selector:
                  matchLabels:
                    container: udsource
              target:
                type: Value
                value: 80
              describedObject:
                apiVersion: apps/v1
                kind: Deployment 
                name: '{{.pipeline-name}}-{{.vertex-name}}'
            type: Object
          scaleTargetRef:
            apiVersion: numaflow.numaproj.io/v1alpha1
            kind: Vertex
            name: '{{.pipeline-name}}-{{.vertex-name}}'

  pipeline:
    #uncomment for Progressive rollout to set Numaflow Controller instance:
    #metadata:
    #  annotations:
    #    numaflow.numaproj.io/instance: "0"
    spec:
      interStepBufferServiceName: my-isbsvc
      vertices:
        - name: in
          scale: 
            #min: 3
            #max: 5
            loopbackSeconds: 180
          
          source:
            # A self data generating source
            generator:
              rpu: 500
              duration: 1s
        - name: cat
          scale: 
            min: 3
            max: 5
          udf:
            container:
              image: "quay.io/numaio/numaflow-go/map-cat:stable" # A built-in UDF which simply cats the message
              imagePullPolicy: Always
        - name: out
          sink:
            # A simple log printing sink
            log: {}
      edges:
        - from: in
          to: cat
        - from: cat
          to: out
