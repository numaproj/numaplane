apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: interstepbufferservices.numaflow.numaproj.io
spec:
  group: numaflow.numaproj.io
  names:
    kind: InterStepBufferService
    listKind: InterStepBufferServiceList
    plural: interstepbufferservices
    shortNames:
    - isbsvc
    singular: interstepbufferservice
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.type
      name: Type
      type: string
    - jsonPath: .status.phase
      name: Phase
      type: string
    - jsonPath: .status.message
      name: Message
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            type: string
          kind:
            type: string
          metadata:
            type: object
          spec:
            type: object
            x-kubernetes-preserve-unknown-fields: true
          status:
            type: object
            x-kubernetes-preserve-unknown-fields: true
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: isbservicerollouts.numaplane.numaproj.io
spec:
  group: numaplane.numaproj.io
  names:
    kind: ISBServiceRollout
    listKind: ISBServiceRolloutList
    plural: isbservicerollouts
    singular: isbservicerollout
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: The current phase
      jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ISBServiceRollout is the Schema for the isbservicerollouts API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ISBServiceRolloutSpec defines the desired state of ISBServiceRollout
            properties:
              interStepBufferService:
                description: InterStepBufferService includes the spec of InterStepBufferService
                  in Numaflow
                properties:
                  spec:
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                required:
                - spec
                type: object
            required:
            - interStepBufferService
            type: object
          status:
            description: ISBServiceRolloutStatus defines the observed state of ISBServiceRollout
            properties:
              conditions:
                description: Conditions are the latest available observations of a
                  resource's current state.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              message:
                description: Message is added if Phase is PhaseFailed.
                type: string
              observedGeneration:
                description: ObservedGeneration stores the generation value observed
                  when setting the current Phase
                format: int64
                type: integer
              phase:
                description: Phase indicates the current phase of the resource.
                enum:
                - ""
                - Pending
                - Deployed
                - Failed
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: monovertexrollouts.numaplane.numaproj.io
spec:
  group: numaplane.numaproj.io
  names:
    kind: MonoVertexRollout
    listKind: MonoVertexRolloutList
    plural: monovertexrollouts
    singular: monovertexrollout
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: The current phase
      jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: MonoVertexRollout is the Schema for the monovertexrollouts API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: MonoVertexRolloutSpec defines the desired state of MonoVertexRollout
            properties:
              monoVertex:
                description: MonoVertex includes the spec of MonoVertex in Numaflow
                properties:
                  spec:
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                required:
                - spec
                type: object
            required:
            - monoVertex
            type: object
          status:
            description: MonoVertexRolloutStatus defines the observed state of MonoVertexRollout
            properties:
              conditions:
                description: Conditions are the latest available observations of a
                  resource's current state.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              message:
                description: Message is added if Phase is PhaseFailed.
                type: string
              observedGeneration:
                description: ObservedGeneration stores the generation value observed
                  when setting the current Phase
                format: int64
                type: integer
              phase:
                description: Phase indicates the current phase of the resource.
                enum:
                - ""
                - Pending
                - Deployed
                - Failed
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: numaflowcontrollerrollouts.numaplane.numaproj.io
spec:
  group: numaplane.numaproj.io
  names:
    kind: NumaflowControllerRollout
    listKind: NumaflowControllerRolloutList
    plural: numaflowcontrollerrollouts
    singular: numaflowcontrollerrollout
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: The current phase
      jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: NumaflowControllerRollout is the Schema for the numaflowcontrollerrollouts
          API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: NumaflowControllerRolloutSpec defines the desired state of
              NumaflowControllerRollout
            properties:
              controller:
                properties:
                  version:
                    type: string
                required:
                - version
                type: object
            required:
            - controller
            type: object
          status:
            description: NumaflowControllerRolloutStatus defines the observed state
              of NumaflowControllerRollout
            properties:
              conditions:
                description: Conditions are the latest available observations of a
                  resource's current state.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              message:
                description: Message is added if Phase is PhaseFailed.
                type: string
              observedGeneration:
                description: ObservedGeneration stores the generation value observed
                  when setting the current Phase
                format: int64
                type: integer
              phase:
                description: Phase indicates the current phase of the resource.
                enum:
                - ""
                - Pending
                - Deployed
                - Failed
                type: string
            type: object
        type: object
        x-kubernetes-validations:
        - message: The metadata name must be 'numaflow-controller'
          rule: (self.metadata.name == "numaflow-controller")
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: pipelinerollouts.numaplane.numaproj.io
spec:
  group: numaplane.numaproj.io
  names:
    kind: PipelineRollout
    listKind: PipelineRolloutList
    plural: pipelinerollouts
    singular: pipelinerollout
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: The current phase
      jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: PipelineRollout is the Schema for the pipelinerollouts API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: PipelineRolloutSpec defines the desired state of PipelineRollout
            properties:
              pipeline:
                description: Pipeline includes the spec of Pipeline in Numaflow
                properties:
                  spec:
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                required:
                - spec
                type: object
            required:
            - pipeline
            type: object
          status:
            description: PipelineRolloutStatus defines the observed state of PipelineRollout
            properties:
              conditions:
                description: Conditions are the latest available observations of a
                  resource's current state.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              message:
                description: Message is added if Phase is PhaseFailed.
                type: string
              observedGeneration:
                description: ObservedGeneration stores the generation value observed
                  when setting the current Phase
                format: int64
                type: integer
              phase:
                description: Phase indicates the current phase of the resource.
                enum:
                - ""
                - Pending
                - Deployed
                - Failed
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: pipelines.numaflow.numaproj.io
spec:
  group: numaflow.numaproj.io
  names:
    kind: Pipeline
    listKind: PipelineList
    plural: pipelines
    shortNames:
    - pl
    singular: pipeline
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    - jsonPath: .status.message
      name: Message
      type: string
    - jsonPath: .status.vertexCount
      name: Vertices
      type: integer
    - jsonPath: .status.sourceCount
      name: Sources
      priority: 10
      type: integer
    - jsonPath: .status.sinkCount
      name: Sinks
      priority: 10
      type: integer
    - jsonPath: .status.udfCount
      name: UDFs
      priority: 10
      type: integer
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            type: string
          kind:
            type: string
          metadata:
            type: object
          spec:
            type: object
            x-kubernetes-preserve-unknown-fields: true
          status:
            type: object
            x-kubernetes-preserve-unknown-fields: true
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: vertices.numaflow.numaproj.io
spec:
  group: numaflow.numaproj.io
  names:
    kind: Vertex
    listKind: VertexList
    plural: vertices
    shortNames:
    - vtx
    singular: vertex
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    - jsonPath: .status.reason
      name: Reason
      type: string
    - jsonPath: .status.message
      name: Message
      type: string
    - jsonPath: .spec.replicas
      name: Desired
      type: string
    - jsonPath: .status.replicas
      name: Current
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            type: string
          kind:
            type: string
          metadata:
            type: object
          spec:
            type: object
            x-kubernetes-preserve-unknown-fields: true
          status:
            type: object
            x-kubernetes-preserve-unknown-fields: true
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      scale:
        labelSelectorPath: .status.selector
        specReplicasPath: .spec.replicas
        statusReplicasPath: .status.replicas
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/name: serviceaccount
    app.kubernetes.io/part-of: numaplane
  name: numaplane-sa
  namespace: numaplane-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/name: role
    app.kubernetes.io/part-of: numaplane
  name: numaplane-leader-election-role
  namespace: numaplane-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: numaplane
  name: isbservicerollout-editor-role
rules:
- apiGroups:
  - numaplane.numaproj.io
  resources:
  - isbservicerollouts
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - numaplane.numaproj.io
  resources:
  - isbservicerollouts/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: numaplane
  name: isbservicerollout-viewer-role
rules:
- apiGroups:
  - numaplane.numaproj.io
  resources:
  - isbservicerollouts
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - numaplane.numaproj.io
  resources:
  - isbservicerollouts/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: numaplane
  name: monovertexrollout-editor-role
rules:
- apiGroups:
  - numaplane.numaproj.io
  resources:
  - monovertexrollouts
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - numaplane.numaproj.io
  resources:
  - monovertexrollouts/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: numaplane
  name: monovertexrollout-viewer-role
rules:
- apiGroups:
  - numaplane.numaproj.io
  resources:
  - monovertexrollouts
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - numaplane.numaproj.io
  resources:
  - monovertexrollouts/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: numaplane
  name: numaflowcontrollerrollout-editor-role
rules:
- apiGroups:
  - numaplane.numaproj.io
  resources:
  - numaflowcontrollerrollouts
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - numaplane.numaproj.io
  resources:
  - numaflowcontrollerrollouts/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: numaplane
  name: numaflowcontrollerrollout-viewer-role
rules:
- apiGroups:
  - numaplane.numaproj.io
  resources:
  - numaflowcontrollerrollouts
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - numaplane.numaproj.io
  resources:
  - numaflowcontrollerrollouts/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
  name: numaplane-aggregate-to-admin
rules:
- apiGroups:
  - numaplane.numaproj.io
  resources:
  - pipelinerollouts
  - isbservicerollouts
  - numaflowcontrollerrollouts
  - monovertexrollouts
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - numaplane.numaproj.io
  resources:
  - pipelinerollouts/status
  - isbservicerollouts/status
  - numaflowcontrollerrollouts/status
  - monovertexrollouts/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  name: numaplane-aggregate-to-edit
rules:
- apiGroups:
  - numaplane.numaproj.io
  resources:
  - pipelinerollouts
  - isbservicerollouts
  - numaflowcontrollerrollouts
  - monovertexrollouts
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - numaplane.numaproj.io
  resources:
  - pipelinerollouts/status
  - isbservicerollouts/status
  - numaflowcontrollerrollouts/status
  - monovertexrollouts/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  name: numaplane-aggregate-to-view
rules:
- apiGroups:
  - numaplane.numaproj.io
  resources:
  - pipelinerollouts
  - isbservicerollouts
  - numaflowcontrollerrollouts
  - monovertexrollouts
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - numaplane.numaproj.io
  resources:
  - pipelinerollouts/status
  - isbservicerollouts/status
  - numaflowcontrollerrollouts/status
  - monovertexrollouts/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: numaplane-role
rules:
- apiGroups:
  - numaflow.numaproj.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - numaplane.numaproj.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - configmaps
  - serviceaccounts
  - secrets
  verbs:
  - '*'
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  - roles
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - '*'
- apiGroups:
  - apps
  resources:
  - statefulsets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: numaplane
  name: pipelinerollout-editor-role
rules:
- apiGroups:
  - numaplane.numaproj.io
  resources:
  - pipelinerollouts
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - numaplane.numaproj.io
  resources:
  - pipelinerollouts/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: numaplane
  name: pipelinerollout-viewer-role
rules:
- apiGroups:
  - numaplane.numaproj.io
  resources:
  - pipelinerollouts
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - numaplane.numaproj.io
  resources:
  - pipelinerollouts/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/name: rolebinding
    app.kubernetes.io/part-of: numaplane
  name: numaplane-leader-election-rolebinding
  namespace: numaplane-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: numaplane-leader-election-role
subjects:
- kind: ServiceAccount
  name: numaplane-sa
  namespace: numaplane-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: numaplane
  name: numaplane-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: numaplane-role
subjects:
- kind: ServiceAccount
  name: numaplane-sa
  namespace: numaplane-system
---
apiVersion: v1
data:
  config.yaml: |-
    logLevel: 3
    includedResources: "group=apps,kind=Deployment;\
    group=,kind=ConfigMap;group=,kind=ServiceAccount;\
    group=rbac.authorization.k8s.io,kind=RoleBinding;group=rbac.authorization.k8s.io,kind=Role"
kind: ConfigMap
metadata:
  name: numaplane-controller-config
  namespace: numaplane-system
---
apiVersion: v1
data:
  pipelineSpecExcludedPaths: |
    - "lifecycle"
    - "limits"
    - "watermark"
kind: ConfigMap
metadata:
  labels:
    numaplane.numaproj.io/config: usde-config
  name: numaplane-controller-usde-config
  namespace: numaplane-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: controller-manager
    app.kubernetes.io/name: controller-manager
    app.kubernetes.io/part-of: numaplane
  name: numaplane-controller-manager
  namespace: numaplane-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: controller-manager
      app.kubernetes.io/name: controller-manager
      app.kubernetes.io/part-of: numaplane
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        app.kubernetes.io/component: controller-manager
        app.kubernetes.io/name: controller-manager
        app.kubernetes.io/part-of: numaplane
    spec:
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8080
        - --leader-elect
        command:
        - /manager
        image: quay.io/numaproj/numaplane-controller:latest
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - mountPath: /etc/numaplane
          name: config-volume
      initContainers: []
      serviceAccountName: numaplane-sa
      terminationGracePeriodSeconds: 10
      volumes:
      - configMap:
          name: numaplane-controller-config
        name: config-volume
