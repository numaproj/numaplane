apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: isbservicerollouts.numaplane.numaproj.io
spec:
  group: numaplane.numaproj.io
  names:
    kind: ISBServiceRollout
    listKind: ISBServiceRolloutList
    plural: isbservicerollouts
    singular: isbservicerollout
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: The current phase
      jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ISBServiceRollout is the Schema for the isbservicerollouts API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ISBServiceRolloutSpec defines the desired state of ISBServiceRollout
            properties:
              interStepBufferService:
                type: object
                x-kubernetes-preserve-unknown-fields: true
            required:
            - interStepBufferService
            type: object
          status:
            description: ISBServiceRolloutStatus defines the observed state of ISBServiceRollout
            properties:
              conditions:
                description: Conditions are the latest available observations of a
                  resource's current state.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              message:
                description: Message is added if Phase is PhaseFailed.
                type: string
              phase:
                description: Phase indicates the current phase of the resource.
                enum:
                - ""
                - Pending
                - Running
                - Failed
                - NotApplicable
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: numaflowcontrollerrollouts.numaplane.numaproj.io
spec:
  group: numaplane.numaproj.io
  names:
    kind: NumaflowControllerRollout
    listKind: NumaflowControllerRolloutList
    plural: numaflowcontrollerrollouts
    singular: numaflowcontrollerrollout
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: The current phase
      jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: NumaflowControllerRollout is the Schema for the numaflowcontrollerrollouts
          API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: NumaflowControllerRolloutSpec defines the desired state of
              NumaflowControllerRollout
            properties:
              controller:
                properties:
                  version:
                    type: string
                required:
                - version
                type: object
            required:
            - controller
            type: object
          status:
            description: NumaflowControllerRolloutStatus defines the observed state
              of NumaflowControllerRollout
            properties:
              conditions:
                description: Conditions are the latest available observations of a
                  resource's current state.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              message:
                description: Message is added if Phase is PhaseFailed.
                type: string
              phase:
                description: Phase indicates the current phase of the resource.
                enum:
                - ""
                - Pending
                - Running
                - Failed
                - NotApplicable
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: pipelinerollouts.numaplane.numaproj.io
spec:
  group: numaplane.numaproj.io
  names:
    kind: PipelineRollout
    listKind: PipelineRolloutList
    plural: pipelinerollouts
    singular: pipelinerollout
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: The current phase
      jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: PipelineRollout is the Schema for the pipelinerollouts API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: PipelineRolloutSpec defines the desired state of PipelineRollout
            properties:
              pipeline:
                type: object
                x-kubernetes-preserve-unknown-fields: true
            required:
            - pipeline
            type: object
          status:
            description: PipelineRolloutStatus defines the observed state of PipelineRollout
            properties:
              conditions:
                description: Conditions are the latest available observations of a
                  resource's current state.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              message:
                description: Message is added if Phase is PhaseFailed.
                type: string
              phase:
                description: Phase indicates the current phase of the resource.
                enum:
                - ""
                - Pending
                - Running
                - Failed
                - NotApplicable
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/name: serviceaccount
    app.kubernetes.io/part-of: numaplane
  name: numaplane-sa
  namespace: numaplane-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/name: role
    app.kubernetes.io/part-of: numaplane
  name: numaplane-leader-election-role
  namespace: numaplane-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: numaplane
  name: isbservicerollout-editor-role
rules:
- apiGroups:
  - numaplane.numaproj.io
  resources:
  - isbservicerollouts
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - numaplane.numaproj.io
  resources:
  - isbservicerollouts/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: numaplane
  name: isbservicerollout-viewer-role
rules:
- apiGroups:
  - numaplane.numaproj.io
  resources:
  - isbservicerollouts
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - numaplane.numaproj.io
  resources:
  - isbservicerollouts/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: numaplane
  name: numaflowcontrollerrollout-editor-role
rules:
- apiGroups:
  - numaplane.numaproj.io
  resources:
  - numaflowcontrollerrollouts
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - numaplane.numaproj.io
  resources:
  - numaflowcontrollerrollouts/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: numaplane
  name: numaflowcontrollerrollout-viewer-role
rules:
- apiGroups:
  - numaplane.numaproj.io
  resources:
  - numaflowcontrollerrollouts
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - numaplane.numaproj.io
  resources:
  - numaflowcontrollerrollouts/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: numaplane-role
rules:
- apiGroups:
  - numaflow.numaproj.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - numaplane.numaproj.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - configmaps
  - serviceaccounts
  - secrets
  verbs:
  - '*'
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  - roles
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: numaplane
  name: pipelinerollout-editor-role
rules:
- apiGroups:
  - numaplane.numaproj.io
  resources:
  - pipelinerollouts
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - numaplane.numaproj.io
  resources:
  - pipelinerollouts/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: numaplane
  name: pipelinerollout-viewer-role
rules:
- apiGroups:
  - numaplane.numaproj.io
  resources:
  - pipelinerollouts
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - numaplane.numaproj.io
  resources:
  - pipelinerollouts/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/name: rolebinding
    app.kubernetes.io/part-of: numaplane
  name: numaplane-leader-election-rolebinding
  namespace: numaplane-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: numaplane-leader-election-role
subjects:
- kind: ServiceAccount
  name: numaplane-sa
  namespace: numaplane-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: numaplane
  name: numaplane-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: numaplane-role
subjects:
- kind: ServiceAccount
  name: numaplane-sa
  namespace: numaplane-system
---
apiVersion: v1
data:
  controller_definitions.yaml: |
    controllerDefinitions:
    - version: "1.2.1"
      fullSpec: |
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: numaflow-controller
        spec:
          replicas: 1
          selector:
            matchLabels:
              app.kubernetes.io/component: controller-manager
              app.kubernetes.io/name: controller-manager
              app.kubernetes.io/part-of: numaflow
          template:
            metadata:
              labels:
                app.kubernetes.io/component: controller-manager
                app.kubernetes.io/name: controller-manager
                app.kubernetes.io/part-of: numaflow
            spec:
              containers:
                - args:
                    - controller
                  env:
                    - name: NUMAFLOW_IMAGE
                      value: quay.io/numaproj/numaflow:latest
                    - name: NAMESPACE
                      valueFrom:
                        fieldRef:
                          fieldPath: metadata.namespace
                    - name: NUMAFLOW_CONTROLLER_NAMESPACED
                      valueFrom:
                        configMapKeyRef:
                          key: namespaced
                          name: numaflow-cmd-params-config
                          optional: true
                    - name: NUMAFLOW_CONTROLLER_MANAGED_NAMESPACE
                      valueFrom:
                        configMapKeyRef:
                          key: managed.namespace
                          name: numaflow-cmd-params-config
                          optional: true
                    - name: NUMAFLOW_LEADER_ELECTION_DISABLED
                      valueFrom:
                        configMapKeyRef:
                          key: controller.leader.election.disabled
                          name: numaflow-cmd-params-config
                          optional: true
                    - name: NUMAFLOW_LEADER_ELECTION_LEASE_DURATION
                      valueFrom:
                        configMapKeyRef:
                          key: controller.leader.election.lease.duration
                          name: numaflow-cmd-params-config
                          optional: true
                    - name: NUMAFLOW_LEADER_ELECTION_LEASE_RENEW_DEADLINE
                      valueFrom:
                        configMapKeyRef:
                          key: controller.leader.election.lease.renew.deadline
                          name: numaflow-cmd-params-config
                          optional: true
                    - name: NUMAFLOW_LEADER_ELECTION_LEASE_RENEW_PERIOD
                      valueFrom:
                        configMapKeyRef:
                          key: controller.leader.election.lease.renew.period
                          name: numaflow-cmd-params-config
                          optional: true
                  image: quay.io/numaproj/numaflow:latest
                  imagePullPolicy: Always
                  livenessProbe:
                    httpGet:
                      path: /healthz
                      port: 8081
                    initialDelaySeconds: 3
                    periodSeconds: 3
                  name: controller-manager
                  readinessProbe:
                    httpGet:
                      path: /readyz
                      port: 8081
                    initialDelaySeconds: 3
                    periodSeconds: 3
                  resources:
                    limits:
                      cpu: 500m
                      memory: 1024Mi
                    requests:
                      cpu: 100m
                      memory: 200Mi
                  volumeMounts:
                    - mountPath: /etc/numaflow
                      name: controller-config-volume
              securityContext:
                runAsNonRoot: true
                runAsUser: 9737
              serviceAccountName: numaflow-sa
              volumes:
                - configMap:
                    name: numaflow-controller-config
                  name: controller-config-volume
        ---
        apiVersion: v1
        data:
          controller-config.yaml: |
            defaults:
              containerResources: |
                requests:
                  memory: "128Mi"
                  cpu: "100m"
            isbsvc:
              redis:
                # Default Redis settings, could be overridden by InterStepBufferService specs
                settings:
                  # Redis config shared by both master and replicas
                  redis: |
                    min-replicas-to-write 1
                    # Disable RDB persistence, AOF persistence already enabled.
                    save ""
                    # Enable AOF https://redis.io/topics/persistence#append-only-file
                    appendonly yes
                    auto-aof-rewrite-percentage 100
                    auto-aof-rewrite-min-size 64mb
                    maxmemory 512mb
                    maxmemory-policy allkeys-lru
                  # Special config only used by master
                  master: ""
                  # Special config only used by replicas
                  replica: ""
                  # Sentinel config
                  sentinel: |
                    sentinel down-after-milliseconds mymaster 10000
                    sentinel failover-timeout mymaster 2000
                    sentinel parallel-syncs mymaster 1
                versions:
                - version: 7.0.11
                  redisImage: bitnami/redis:7.0.11-debian-11-r3
                  sentinelImage: bitnami/redis-sentinel:7.0.11-debian-11-r3
                  redisExporterImage: bitnami/redis-exporter:1.50.0-debian-11-r4
                  initContainerImage: debian:latest
                - version: 7.0.15
                  redisImage: bitnami/redis:7.0.15-debian-11-r2
                  sentinelImage: bitnami/redis-sentinel:7.0.15-debian-11-r2
                  redisExporterImage: bitnami/redis-exporter:1.56.0-debian-11-r2
                  initContainerImage: debian:latest
              jetstream:
                # Default JetStream settings, could be overridden by InterStepBufferService specs
                settings: |
                  # https://docs.nats.io/running-a-nats-service/configuration#limits
                  # Only support to configure "max_payload".
                  # Max payload size in bytes, defaults to 1 MB. It is not recommended to use values over 8MB but max_payload can be set up to 64MB.
                  max_payload: 1048576
                  # https://docs.nats.io/running-a-nats-service/configuration#jetstream
                  # Only configure "max_memory_store" or "max_file_store", do not set "store_dir" as it has been hardcoded.
                  # e.g. 1G. -1 means no limit, up to 75% of available memory. This only take effect for streams created using memory storage.
                  max_memory_store: -1
                  # e.g. 20G. -1 means no limit, Up to 1TB if available
                  max_file_store: 1TB
                bufferConfig: |
                  # The default properties of the buffers (streams) to be created in this JetStream service
                  stream:
                    # 0: Limits, 1: Interest, 2: WorkQueue
                    retention: 0
                    maxMsgs: 100000
                    maxAge: 72h
                    maxBytes: -1
                    # 0: File, 1: Memory
                    storage: 0
                    replicas: 3
                    duplicates: 60s
                  # The default consumer properties for the created streams
                  consumer:
                    ackWait: 60s
                    maxAckPending: 25000
                  otBucket:
                    maxValueSize: 0
                    history: 1
                    ttl: 3h
                    maxBytes: 0
                    # 0: File, 1: Memory
                    storage: 0
                    replicas: 3
                  procBucket:
                    maxValueSize: 0
                    history: 1
                    ttl: 72h
                    maxBytes: 0
                    # 0: File, 1: Memory
                    storage: 0
                    replicas: 3
                versions:
                - version: latest
                  natsImage: nats:2.10.3
                  metricsExporterImage: natsio/prometheus-nats-exporter:0.9.1
                  configReloaderImage: natsio/nats-server-config-reloader:0.7.0
                  startCommand: /nats-server
                - version: 2.8.1
                  natsImage: nats:2.8.1
                  metricsExporterImage: natsio/prometheus-nats-exporter:0.9.1
                  configReloaderImage: natsio/nats-server-config-reloader:0.7.0
                  startCommand: /nats-server
                - version: 2.8.1-alpine
                  natsImage: nats:2.8.1-alpine
                  metricsExporterImage: natsio/prometheus-nats-exporter:0.9.1
                  configReloaderImage: natsio/nats-server-config-reloader:0.7.0
                  startCommand: nats-server
                - version: 2.8.3
                  natsImage: nats:2.8.3
                  metricsExporterImage: natsio/prometheus-nats-exporter:0.9.1
                  configReloaderImage: natsio/nats-server-config-reloader:0.7.0
                  startCommand: /nats-server
                - version: 2.8.3-alpine
                  natsImage: nats:2.8.3-alpine
                  metricsExporterImage: natsio/prometheus-nats-exporter:0.9.1
                  configReloaderImage: natsio/nats-server-config-reloader:0.7.0
                  startCommand: nats-server
                - version: 2.9.0
                  natsImage: nats:2.9.0
                  metricsExporterImage: natsio/prometheus-nats-exporter:0.9.1
                  configReloaderImage: natsio/nats-server-config-reloader:0.7.0
                  startCommand: /nats-server
                - version: 2.9.0-alpine
                  natsImage: nats:2.9.0-alpine
                  metricsExporterImage: natsio/prometheus-nats-exporter:0.9.1
                  configReloaderImage: natsio/nats-server-config-reloader:0.7.0
                  startCommand: nats-server
                - version: 2.9.6
                  natsImage: nats:2.9.6
                  metricsExporterImage: natsio/prometheus-nats-exporter:0.9.1
                  configReloaderImage: natsio/nats-server-config-reloader:0.7.0
                  startCommand: /nats-server
                - version: 2.9.8
                  natsImage: nats:2.9.8
                  metricsExporterImage: natsio/prometheus-nats-exporter:0.9.1
                  configReloaderImage: natsio/nats-server-config-reloader:0.7.0
                  startCommand: /nats-server
                - version: 2.9.15
                  natsImage: nats:2.9.15
                  metricsExporterImage: natsio/prometheus-nats-exporter:0.9.1
                  configReloaderImage: natsio/nats-server-config-reloader:0.7.0
                  startCommand: /nats-server
                - version: 2.10.3
                  natsImage: nats:2.10.3
                  metricsExporterImage: natsio/prometheus-nats-exporter:0.9.1
                  configReloaderImage: natsio/nats-server-config-reloader:0.7.0
                  startCommand: /nats-server
                - version: 2.10.11
                  natsImage: nats:2.10.11
                  metricsExporterImage: natsio/prometheus-nats-exporter:0.9.1
                  configReloaderImage: natsio/nats-server-config-reloader:0.7.0
                  startCommand: /nats-server
        kind: ConfigMap
        metadata:
          name: numaflow-controller-config
        ---
        apiVersion: rbac.authorization.k8s.io/v1
        kind: Role
        metadata:
          labels:
            app.kubernetes.io/component: controller-manager
            app.kubernetes.io/name: numaflow-controller-manager
            app.kubernetes.io/part-of: numaflow
          name: numaflow-role
        rules:
          - apiGroups:
              - numaflow.numaproj.io
            resources:
              - interstepbufferservices
              - interstepbufferservices/finalizers
              - interstepbufferservices/status
              - pipelines
              - pipelines/finalizers
              - pipelines/status
              - vertices
              - vertices/finalizers
              - vertices/status
              - vertices/scale
            verbs:
              - create
              - delete
              - deletecollection
              - get
              - list
              - patch
              - update
              - watch
          - apiGroups:
              - coordination.k8s.io
            resources:
              - leases
            verbs:
              - get
              - list
              - watch
              - create
              - update
              - patch
              - delete
          - apiGroups:
              - ""
            resources:
              - events
            verbs:
              - create
              - patch
          - apiGroups:
              - ""
            resources:
              - pods
              - pods/exec
              - configmaps
              - services
              - persistentvolumeclaims
            verbs:
              - create
              - get
              - list
              - watch
              - update
              - patch
              - delete
          - apiGroups:
              - ""
            resources:
              - secrets
            verbs:
              - create
              - get
              - list
              - update
              - patch
              - delete
          - apiGroups:
              - apps
            resources:
              - deployments
              - statefulsets
            verbs:
              - create
              - get
              - list
              - watch
              - update
              - patch
              - delete
          - apiGroups:
              - batch
            resources:
              - jobs
            verbs:
              - create
              - get
              - list
              - watch
              - update
              - patch
              - delete
        ---
        apiVersion: rbac.authorization.k8s.io/v1
        kind: RoleBinding
        metadata:
          labels:
            app.kubernetes.io/component: controller-manager
            app.kubernetes.io/name: numaflow-controller-manager
            app.kubernetes.io/part-of: numaflow
          name: numaflow-role-binding
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: Role
          name: numaflow-role
        subjects:
          - kind: ServiceAccount
            name: numaflow-sa
        ---
        apiVersion: v1
        kind: ServiceAccount
        metadata:
          name: numaflow-sa
        ---
        apiVersion: v1
        data:
          namespaced: "true"
          server.disable.auth: "true"
        kind: ConfigMap
        metadata:
          name: numaflow-cmd-params-config
    - version: "1.1.7"
      fullSpec: ""
immutable: true
kind: ConfigMap
metadata:
  name: numaflow-controller-definitions-config
  namespace: numaplane-system
---
apiVersion: v1
data:
  config.yaml: |-
    syncTimeIntervalMs: 30000
    includedResources: "group=apps,kind=Deployment;\
    group=,kind=ConfigMap;group=,kind=Secret;group=,kind=ServiceAccount;\
    group=numaflow.numaproj.io,kind=;\
    group=numaplane.numaproj.io,kind=;\
    group=rbac.authorization.k8s.io,kind=RoleBinding;group=rbac.authorization.k8s.io,kind=Role"
kind: ConfigMap
metadata:
  name: numaplane-controller-config
  namespace: numaplane-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: controller-manager
    app.kubernetes.io/name: controller-manager
    app.kubernetes.io/part-of: numaplane
  name: numaplane-controller-manager
  namespace: numaplane-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: controller-manager
      app.kubernetes.io/name: controller-manager
      app.kubernetes.io/part-of: numaplane
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        app.kubernetes.io/component: controller-manager
        app.kubernetes.io/name: controller-manager
        app.kubernetes.io/part-of: numaplane
    spec:
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8080
        - --leader-elect
        command:
        - /manager
        image: quay.io/numaproj/numaplane-controller:latest
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - mountPath: /etc/numaplane
          name: config-volume
        - mountPath: /etc/numarollout
          name: numarollout-volume
      initContainers: []
      serviceAccountName: numaplane-sa
      terminationGracePeriodSeconds: 10
      volumes:
      - configMap:
          name: numaplane-controller-config
        name: config-volume
      - configMap:
          name: numaflow-controller-definitions-config
        name: numarollout-volume
