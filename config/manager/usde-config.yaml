apiVersion: v1
kind: ConfigMap
metadata:
  name: numaplane-controller-usde-config
  labels:
    numaplane.numaproj.io/config: usde-config
data:
  pipeline: |
    dataLoss:
      # Principal: Pipeline topology change could cause data loss since unconsumed data may be left on the InterstepBufferService which won't get processed
      - path: spec.edges.from
      - path: spec.edges.to
      - path: spec.edges.conditions
        includeSubfields: true

      # Principal: Changing an Image definition could cause data loss if the new Image is not able to process the old data from the InterstepBufferService
      - path: spec.vertices.source.generator
      - path: spec.vertices.source.kafka
      - path: spec.vertices.source.http
      - path: spec.vertices.source.nats
      - path: spec.vertices.source.jetstream
      - path: spec.vertices.source.serving
      - path: spec.vertices.source.udsource.container.image
      - path: spec.vertices.source.transformer.container.image
      - path: spec.vertices.source.transformer.container.command
      - path: spec.vertices.source.transformer.container.args
      - path: spec.vertices.source.transformer.container.env
        includeSubfields: true
      - path: spec.vertices.source.transformer.container.envfrom
        includeSubfields: true
      - path: spec.vertices.source.transformer.builtin
        includeSubfields: true
      - path: spec.vertices.sink.log
      - path: spec.vertices.sink.kafka
      - path: spec.vertices.sink.blackhole
      - path: spec.vertices.sink.udsink.container.image
      - path: spec.vertices.sink.udsink.container.command
      - path: spec.vertices.sink.udsink.container.args
      - path: spec.vertices.sink.udsink.container.env
        includeSubfields: true
      - path: spec.vertices.sink.udsink.container.envfrom
        includeSubfields: true
      - path: spec.vertices.udf.container.image
      - path: spec.vertices.udf.container.command
      - path: spec.vertices.udf.container.args
      - path: spec.vertices.udf.container.env
        includeSubfields: true
      - path: spec.vertices.udf.container.envfrom
        includeSubfields: true
      - path: spec.vertices.udf.builtin
        includeSubfields: true
      - path: spec.sideInputs.container.image
      - path: spec.sideInputs.container.command
      - path: spec.sideInputs.container.args
      - path: spec.sideInputs.container.env
        includeSubfields: true
      - path: spec.sideInputs.container.envfrom
        includeSubfields: true
      - path: spec.templates     # note: this one could be broken down further into just the fields that are at risk
        includeSubfields: true

      # Principal: TBD
      - path: spec.sideInputs.container.envfrom
        includeSubfields: true
    recreate:
      # Principal: Changing the InterstepBufferService could cause data loss since unconsumed data may be left on the InterstepBufferService which won't get processed.
      # Furthermore, this change needs to recreate the pipeline so that ISBSvc buckets and buffers are also recreated.
      - path: spec.interStepBufferServiceName
  interstepbufferservice: |
    dataLoss:
      # Principal: Update to StatefulSet may not be backward compatible to understand the data on the PVC
      - path: spec.jetstream.version
      - path: spec.redis.native.version
      - path: spec.redis.external.url
      - path: spec.redis.external.sentinelUrl
      - path: spec.redis.external.masterName
    recreate:
      # Changing persistence settings and number of replicas needs to recreate both the ISBSvc and also the pipelines associated to it to 
      # recreate the buckets and buffers which are only recreated when a pipeline is started.
      - path: spec.jetstream.replicas
      - path: spec.redis.native.replicas
      - path: spec.jetstream.persistence
        includeSubfields: true
      - path: spec.redis.native.persistence
        includeSubfields: true
  monovertex: |
    progressive:
      - path: spec.initContainers.image
      - path: spec.initContainers.command
      - path: spec.initContainers.args
      - path: spec.initContainers.env
      - path: spec.sidecars.image
      - path: spec.sidecars.command
      - path: spec.sidecars.args
      - path: spec.sidecars.env
      - path: spec.sink.fallback.udsink.container.image
      - path: spec.sink.fallback.udsink.container.command
      - path: spec.sink.fallback.udsink.container.args
      - path: spec.sink.fallback.udsink.container.env
      - path: spec.sink.udsink.container.image
      - path: spec.sink.udsink.container.command
      - path: spec.sink.udsink.container.args
      - path: spec.sink.udsink.container.env
      - path: spec.source.transformer.container.image
      - path: spec.source.transformer.container.command
      - path: spec.source.transformer.container.args
      - path: spec.source.transformer.container.env
      - path: spec.source.udsource.container.image
      - path: spec.source.udsource.container.command
      - path: spec.source.udsource.container.args
      - path: spec.source.udsource.container.env
  numaflowcontroller: |
    # Idependently of the USDE strategy, the NumaflowController will be deleted and recreated even if the USDE logic will not specify to recreate.
    # The NumaflowController controller will always process a USDE response to update the spec by recreating the NumaflowController.
    recreate:
      - path: spec
        includeSubfields: true
