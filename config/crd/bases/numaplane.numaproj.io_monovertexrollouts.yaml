---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: monovertexrollouts.numaplane.numaproj.io
spec:
  group: numaplane.numaproj.io
  names:
    kind: MonoVertexRollout
    listKind: MonoVertexRolloutList
    plural: monovertexrollouts
    singular: monovertexrollout
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: The current phase
      jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: MonoVertexRollout is the Schema for the monovertexrollouts API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: MonoVertexRolloutSpec defines the desired state of MonoVertexRollout
            properties:
              monoVertex:
                description: MonoVertex includes the spec of MonoVertex in Numaflow
                properties:
                  metadata:
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        type: object
                    type: object
                  spec:
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                required:
                - spec
                type: object
              riders:
                items:
                  description: Rider defines a resource that can be deployed along
                    with the primary child of a rollout
                  properties:
                    definition:
                      description: Definition of resource that is deployed with primary
                        child
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    progressive:
                      description: if set, perform progressive rollout when it changes
                      type: boolean
                  type: object
                type: array
              strategy:
                description: PipelineTypeRolloutStrategy specifies the Rollout Strategy
                  for fields shared by Pipeline and MonoVertex
                properties:
                  analysis:
                    description: Analysis defines how to perform analysis of health,
                      outside of basic resource checking
                    properties:
                      args:
                        description: Arguments can be passed to templates to evaluate
                          any parameterization
                        items:
                          description: Argument is an argument to an AnalysisRun
                          properties:
                            name:
                              description: Name is the name of the argument
                              type: string
                            value:
                              description: Value is the value of the argument
                              type: string
                            valueFrom:
                              description: ValueFrom is a reference to where a secret
                                is stored. This field is one of the fields with valueFrom
                              properties:
                                fieldRef:
                                  description: |-
                                    FieldRef is a reference to the fields in metadata which we are referencing. This field is one of the fields with
                                    valueFrom
                                  properties:
                                    fieldPath:
                                      description: 'Required: Path of the field to
                                        select in the specified API version'
                                      type: string
                                  required:
                                  - fieldPath
                                  type: object
                                secretKeyRef:
                                  description: Secret is a reference to where a secret
                                    is stored. This field is one of the fields with
                                    valueFrom
                                  properties:
                                    key:
                                      description: Key is the key of the secret to
                                        select from.
                                      type: string
                                    name:
                                      description: Name is the name of the secret
                                      type: string
                                  required:
                                  - key
                                  - name
                                  type: object
                              type: object
                          required:
                          - name
                          type: object
                        type: array
                      templates:
                        description: Templates are used to analyze the AnalysisRun
                        items:
                          properties:
                            clusterScope:
                              description: Whether to look for the templateName at
                                cluster scope or namespace scope
                              type: boolean
                            templateName:
                              description: TemplateName name of template to use in
                                AnalysisRun
                              type: string
                          type: object
                        type: array
                    type: object
                  pauseResume:
                    properties:
                      fastResume:
                        description: FastResume indicates if the Pipeline should be
                          resumed with the number of replicas it had before it was
                          paused.
                        type: boolean
                    type: object
                  progressive:
                    properties:
                      assessmentSchedule:
                        description: |-
                          optional string: comma-separated list consisting of:
                          assessmentDelay, assessmentPeriod, assessmentInterval
                        type: string
                      forcePromote:
                        description: if ForcePromote is set, assessment will be skipped
                          and Progressive upgrade will succeed
                        type: boolean
                    type: object
                type: object
            required:
            - monoVertex
            type: object
          status:
            description: MonoVertexRolloutStatus defines the observed state of MonoVertexRollout
            properties:
              conditions:
                description: Conditions are the latest available observations of a
                  resource's current state.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              lastFailureTime:
                description: LastFailureTime records the timestamp of the Last Failure
                  (PhaseFailed)
                format: date-time
                type: string
              message:
                description: Message is added if Phase is PhaseFailed.
                type: string
              nameCount:
                description: |-
                  NameCount is used as a suffix for the name of the managed monovertex, to uniquely
                  identify a monovertex.
                format: int32
                type: integer
              observedGeneration:
                description: ObservedGeneration stores the generation value observed
                  when setting the current Phase
                format: int64
                type: integer
              phase:
                description: Phase indicates the current phase of the resource.
                enum:
                - ""
                - Pending
                - Deployed
                - Failed
                type: string
              progressiveStatus:
                description: ProgressiveStatus stores fields related to the Progressive
                  strategy
                properties:
                  promotedMonoVertexStatus:
                    description: PromotedMonoVertexStatus stores information regarding
                      the current "promoted" MonoVertex
                    properties:
                      name:
                        description: Name of the promoted child
                        type: string
                      scaleValues:
                        additionalProperties:
                          description: ScaleValues stores the original scale min and
                            max values, scaleTo value, and actual scale value of a
                            pipeline or monovertex vertex
                          properties:
                            initial:
                              description: Initial indicates how many pods were initially
                                running for the vertex at the beginning of the upgrade
                                process
                              format: int64
                              type: integer
                            originalScaleMinMax:
                              description: OriginalScaleMinMax stores the original
                                scale min and max values as JSON string
                              type: string
                            scaleTo:
                              description: ScaleTo indicates how many pods to scale
                                down to
                              format: int64
                              type: integer
                          required:
                          - initial
                          - originalScaleMinMax
                          - scaleTo
                          type: object
                        description: |-
                          ScaleValues is a map where the keys are the promoted child vertices names
                          and the values are the scale values of the vertices
                        type: object
                      scaleValuesRestoredToOriginal:
                        description: |-
                          ScaleValuesRestoredToOriginal indicates if ALL the promoted child vertices have been set back to the original min and max scale values.
                          This field being set to `true` invalidates the value(s) in the scaleValues.Actual field.
                        type: boolean
                    required:
                    - name
                    type: object
                  upgradingMonoVertexStatus:
                    description: UpgradingMonoVertexStatus represents either the current
                      or otherwise the most recent "upgrading" MonoVertex
                    properties:
                      analysis:
                        properties:
                          analysisRunName:
                            description: AnalysisRunName is the name of the AnalysisRun,
                              set after it's generated
                            type: string
                          endTime:
                            description: EndTime is the time that it completed
                            format: date-time
                            type: string
                          phase:
                            description: Phase is the phase of the AnalysisRun when
                              completed
                            type: string
                          startTime:
                            description: StartTime is the time that the AnalysisRun
                              is created
                            format: date-time
                            type: string
                        required:
                        - phase
                        type: object
                      assessmentResult:
                        description: AssessmentResult described whether it's failed
                          or succeeded, or to be determined
                        type: string
                      basicAssessmentEndTime:
                        description: BasicAssessmentEndTime indicates the time after
                          which no more basic resource health check assessments will
                          be performed
                        format: date-time
                        type: string
                      basicAssessmentResult:
                        description: BasicAssessmentResult indicates the result of
                          the basic resource health check assessment
                        type: string
                      basicAssessmentStartTime:
                        description: BasicAssessmentStartTime indicates the time at/after
                          which the basic resource health check assessment result
                          will be computed
                        format: date-time
                        type: string
                      childStatus:
                        description: ChildStatus is the full dump of child status
                          object
                        type: object
                        x-kubernetes-preserve-unknown-fields: true
                      discontinued:
                        description: |-
                          Discontinued indicates if the upgrade was stopped prematurely.
                          This can happen if the upgrade gets preempted by a new change, or it can happen if user deletes their promoted pipeline
                          in the middle of an upgrade
                        type: boolean
                      failureReason:
                        description: FailureReason indicates the reason for the failure
                        type: string
                      forcedSuccess:
                        description: ForcedSuccess indicates if this promotion was
                          forced to complete
                        type: boolean
                      initializationComplete:
                        description: InitializationComplete determines if the upgrade
                          process has completed (if it hasn't, we will come back and
                          try it again)
                        type: boolean
                      name:
                        description: Name of the upgrading child
                        type: string
                      originalScaleMinMax:
                        description: |-
                          OriginalScaleMinMax stores the original scale min and max values as JSON string
                          Example: {"min":1,"max":10,"disabled":false}
                          Note 'disabled' is a field in numaflow used to represent if scaling is performed by numaflow.
                          If 'disabled==true", then "min" and "max" probably wouldn't be set, and if they are they'll be ignored.
                        type: string
                      riders:
                        description: Riders stores the list of Riders that have been
                          deployed along with the "upgrading" child
                        items:
                          description: Rider represents a Rider which has been deployed
                            for a promoted child
                          properties:
                            groupVersionKind:
                              description: |-
                                GroupVersionKind unambiguously identifies a kind.  It doesn't anonymously include GroupVersion
                                to avoid automatic coercion.  It doesn't use a GroupVersion to avoid custom marshalling
                              properties:
                                group:
                                  type: string
                                kind:
                                  type: string
                                version:
                                  type: string
                              required:
                              - group
                              - kind
                              - version
                              type: object
                            name:
                              type: string
                          required:
                          - groupVersionKind
                          - name
                          type: object
                        type: array
                      trialWindowStartTime:
                        description: TrialWindowStartTime indicates the time at which
                          the trial window starts
                        format: date-time
                        type: string
                    required:
                    - name
                    - originalScaleMinMax
                    type: object
                type: object
              riders:
                description: Riders stores the list of Riders that have been deployed
                  along with the "promoted" MonoVertex
                items:
                  description: Rider represents a Rider which has been deployed for
                    a promoted child
                  properties:
                    groupVersionKind:
                      description: |-
                        GroupVersionKind unambiguously identifies a kind.  It doesn't anonymously include GroupVersion
                        to avoid automatic coercion.  It doesn't use a GroupVersion to avoid custom marshalling
                      properties:
                        group:
                          type: string
                        kind:
                          type: string
                        version:
                          type: string
                      required:
                      - group
                      - kind
                      - version
                      type: object
                    name:
                      type: string
                  required:
                  - groupVersionKind
                  - name
                  type: object
                type: array
              upgradeInProgress:
                description: UpgradeInProgress indicates the upgrade strategy currently
                  being used and affecting the resource state or empty if no upgrade
                  is in progress
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
